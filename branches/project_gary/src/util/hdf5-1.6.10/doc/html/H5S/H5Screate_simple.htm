<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Screate_simple" -->
<hr>
<dl>
<dt><div align=right><font color=999999 size=-1><i>
      Last modified: 13 April 2009
      </i></font></div>

<dt><strong>Name:</strong> <a name="Dataspace-CreateSimple">H5Screate_simple</a>
<dt><strong>Signature:</strong>
    <dd><em>hid_t</em> <code>H5Screate_simple</code>(<em>int</em> <code>rank</code>,
        <em>const hsize_t *</em> <code>dims</code>,
        <em>const hsize_t *</em> <code>maxdims</code>
    )

<p>
<dt><strong>Purpose:</strong>
    <dd>Creates a new simple dataspace and opens it for access. 

<p>
<dt><strong>Description:</strong>
    <dd><code>H5Screate_simple</code> creates a new simple dataspace 
        and opens it for access, returning a dataset identifier. 
        <p>
        <code>rank</code> is the number of dimensions used in the dataspace.  
        <p>
        <code>dims</code> is a one-dimensional array of size <code>rank</code>
        specifying the size of each dimension of the dataset. 
        <code>maxdims</code> is an array of the same size 
        specifying the upper limit on the size of each dimension.  
        <code>maxdims</code> may be the null pointer, in which case the 
        upper limit is the same as <code>dims</code>.  
        <p>
        If an element of <code>maxdims</code> is <code>H5S_UNLIMITED</code>,
        the maximum size of the corresponding dimension is unlimited.
        Otherwise, no element of <code>maxdims</code> should be 
        smaller than the corresponding element of <code>dims</code>.  
        <p>
        Note that any dataset with an unlimited dimension must also
        be chunked; see 
        <a href="RM_H5P.html#Property-SetChunk"><code>H5Pset_chunk</code></a>.
        <p>
        The dataspace identifier returned from this function must be 
        released with <code>H5Sclose</code> or resource leaks will occur.

<p>
<dt><strong>Parameters:</strong>
    <dd><table>
            <tr>
                <td valign="top"><em>int</em> <code>rank</code></td>
                <td valign="top">Number of dimensions of dataspace.</td></tr>
            <tr>

                <td valign="top"><em>const hsize_t *</em> <code>dims</code></td>
                <td valign="top">An array of the size of each 
                    dimension.</td></tr>
            <tr>
                <td valign="top"><em>const&nbsp;hsize_t&nbsp;*</em>&nbsp;<code>maxdims&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
                <td valign="top">An array of the maximum size of each 
                    dimension.</td></tr>
        </table>

<p>
<dt><strong>Returns:</strong>
    <dd>Returns a dataspace identifier if successful; 
        otherwise returns a negative value.

<p>
<dt><strong>See Also:</strong>
    <dd><a href="RM_H5P.html#Property-SetChunk"><code>H5Pset_chunk</code></a>

<p>
<dt><strong>Fortran90 Interface:</strong> h5screate_simple_f
    <dd>
        <pre>
SUBROUTINE h5screate_simple_f(rank, dims, space_id, hdferr, maxdims) 
  IMPLICIT NONE
  INTEGER, INTENT(IN) :: rank             ! Number of dataspace dimensions 
  INTEGER(HSIZE_T), INTENT(IN) :: dims(*) ! Array with the dimension sizes 
  INTEGER(HID_T), INTENT(OUT) :: space_id ! Dataspace identifier 
  INTEGER, INTENT(OUT) :: hdferr          ! Error code
                                          ! 0 on success and -1 on failure
  INTEGER(HSIZE_T), OPTIONAL, INTENT(IN) :: maxdims(*) 
                                          ! Array with the maximum 
                                          ! dimension sizes 
END SUBROUTINE h5screate_simple_f
        </pre>

</dl>

