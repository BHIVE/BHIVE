<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Sget_simple_extent_dims" -->
<hr>
<dl>
<dt><strong>Name:</strong> <a name="Dataspace-ExtentDims">H5Sget_simple_extent_dims</a>
<dt><strong>Signature:</strong>
    <dd><em>int</em> <code>H5Sget_simple_extent_dims</code>(<em>hid_t</em> <code>space_id</code>,
        <em>hsize_t *</em><code>dims</code>,
        <em>hsize_t *</em><code>maxdims</code>
    )
<dt><strong>Purpose:</strong>
    <dd>Retrieves dataspace dimension size and maximum size.
<dt><strong>Description:</strong>
    <dd><code>H5Sget_simple_extent_dims</code> returns the size and maximum sizes 
        of each dimension of a dataspace through the <code>dims</code> 
        and <code>maxdims</code> parameters.
        <p>
        Either or both of <code>dims</code> and <code>maxdims</code> 
        may be NULL.
        <p>
        If a value in the returned array <code>maxdims</code> is
        <code>H5S_UNLIMITED</code> (</code>-1</code>), 
        the maximum size of that dimension is unlimited.
<dt><strong>Parameters:</strong>
    <ul><table>
        <tr>
		  <td valign="top"><em>hid_t</em> <code>space_id</code></td>
          <td valign="top">IN: Identifier of the dataspace object to query</td></tr>
        <tr>
		  <td valign="top"><em>hsize_t *</em><code>dims</code></td>
          <td valign="top">OUT: Pointer to array to store the size of each dimension.</td></tr>
        <tr>
		  <td valign="top"><em>hsize_t&nbsp;*</em><code>maxdims&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
          <td valign="top">OUT: Pointer to array to store the maximum size of each dimension.</td></tr>
    </table></ul>
<dt><strong>Returns:</strong>
    <dd>Returns the number of dimensions in the dataspace if successful;
        otherwise returns a negative value.
<dt><strong>Fortran90 Interface:</strong> h5sget_simple_extent_dims_f
    <dd>
	<pre>
SUBROUTINE h5sget_simple_extent_dims_f(space_id, dims, maxdims, hdferr) 
  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: space_id   ! Dataspace identifier 
  INTEGER(HSIZE_T), DIMENSION(*), INTENT(OUT) :: dims 
                                           ! Array to store dimension sizes 
  INTEGER(HSIZE_T), DIMENSION(*), INTENT(OUT) :: maxdims 
                                           ! Array to store max dimension sizes
  INTEGER, INTENT(OUT) :: hdferr           ! Error code
                                           ! Dataspace rank on success 
                                           ! and -1 on failure
END SUBROUTINE h5sget_simple_extent_dims_f
	</pre>		
		
		<!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
</dl>

