<!-- NEW PAGE -->
<!-- HEADER RIGHT "H5Gcreate" -->
<hr>
<dl>
  <dt><strong>Name:</strong> <a name="Group-Create">H5Gcreate</a>
  <dt><strong>Signature:</strong>
    <dd><em>hid_t </em><code>H5Gcreate</code>(<em>hid_t</em> <code>loc_id</code>, 
        <em>const char *</em><code>name</code>,
        <em>size_t</em> <code>size_hint</code>
    )
  <dt><strong>Purpose:</strong>
    <dd>Creates a new empty group and gives it a name.
  <dt><strong>Description:</strong>
    <dd><code>H5Gcreate</code> creates a new group with the specified
        name at the specified location, <code>loc_id</code>.  
        The location is identified by a file or group identifier.  
        The name, <code>name</code>, must not already be taken by some 
        other object and all parent groups must already exist.  
        <p>
        <code>size_hint</code> is a hint for the number of bytes to
        reserve to store the names which will be eventually added to
        the new group.  Passing a value of zero for <code>size_hint</code>
        is usually adequate since the library is able to dynamically
        resize the name heap, but a correct hint may result in better
        performance.  
        If a non-positive value is supplied for <code>size_hint</code>, 
        then a default size is chosen.
        <p>
        The length of a group name, or of the name of any object within 
        a group, is not limited.  
        <p>
        The return value is a group identifier for the open group.
	This group identifier should be closed by calling 
        <code>H5Gclose</code> when it is no longer needed. 
  <dt><strong>Parameters:</strong>
    <ul><table>
      <tr>
          <td valign="top"><em>hid_t</em> <code>loc_id</code></td>
          <td valign="top">IN: File or group identifier.</td></tr>
      <tr>
          <td valign="top"><em>const char *</em><code>name</code></td>
          <td valign="top">IN: Absolute or relative name of the new group.</td></tr>
      <tr>
          <td valign="top"><em>size_t</em>&nbsp;<code>size_hint&nbsp;&nbsp;&nbsp;&nbsp;</code></td>
          <td valign="top">IN: Optional parameter indicating the number of 
              bytes to reserve for the names that will appear in the group. 
              A conservative estimate could result in multiple 
              system-level I/O requests to read the group name heap; 
              a liberal estimate could result in a single large 
              I/O request even when the group has just a few names.  
              HDF5 stores each name with a null terminator.</td></tr>
    </table></ul>
  <dt><strong>Returns:</strong>
    <dd>Returns a valid group identifier for the open group if successful; 
        otherwise returns a negative value.
  <dt><strong>Fortran90 Interface:</strong> h5gcreate_f
    <dd>
	<pre>
SUBROUTINE h5gcreate_f(loc_id, name, gr_id, hdferr, size_hint)

  IMPLICIT NONE
  INTEGER(HID_T), INTENT(IN) :: loc_id   ! File or group identifier
  CHARACTER(LEN=*), INTENT(IN) :: name   ! Name of the group to be created 
  INTEGER(HID_T), INTENT(OUT) :: gr_id   ! Group identifier
  INTEGER, INTENT(OUT) :: hdferr         ! Error code 
                                         ! 0 on success and -1 on failure
  INTEGER(SIZE_T), OPTIONAL, INTENT(IN) :: size_hint  
                                         ! Number of bytes to store the names 
                                         ! of objects in the group. 
                                         ! Default value is 
                                         ! OBJECT_NAMELEN_DEFAULT_F
END SUBROUTINE h5gcreate_f 
	</pre>		
		
		<!--<dt><strong>Non-C API(s):</strong>
    	<dd>
        
        <img src="Graphics/Java.gif"> 
        <img src="Graphics/C++.gif">
        -->
</dl>

